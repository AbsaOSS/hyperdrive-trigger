#
# Copyright 2018 ABSA Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version=@project.version@
environment=Cloud

server.port=7123
spring.resources.static-locations=classpath:/ui/
logging.path=logs
logging.file=${logging.path}/app.log

# Spring management endpoints settings
management.endpoints.web.base-path=/admin
management.endpoints.jmx.exposure.exclude=*
management.endpoints.web.exposure.include=*

# How will users authenticate. Available options: inmemory, ldap
auth.mechanism=inmemory
# INMEMORY authentication: username and password defined here will be used for authentication.
auth.inmemory.user=user
auth.inmemory.password=password
# LDAP authentication: props template that has to be defined in case of LDAP authentication
#auth.ad.domain=
#auth.ad.server=
#auth.ldap.search.base=
#auth.ldap.search.filter=

appUniqueId=432b6572-fd08-48a1-902c-920b3f7k888

# Core properties.
# How many threads to use for each part of the "scheduler".
# Heart beat interval in milliseconds.
scheduler.thread.pool.size=10
scheduler.sensors.thread.pool.size=20
scheduler.executors.thread.pool.size=30
scheduler.jobs.parallel.number=100
scheduler.heart.beat=5000

#Kafka sensor properties.
kafkaSource.group.id=hyper_drive_${appUniqueId}
kafkaSource.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafkaSource.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafkaSource.poll.duration=500
kafkaSource.max.poll.records=3
kafkaSource.properties.enable.auto.commit=false
kafkaSource.properties.auto.offset.reset=latest
kafkaSource.properties.security.protocol=SASL_PLAINTEXT
kafkaSource.properties.ssl.truststore.location=/opt/hyperdrive/hyperdrive-uat-truststore.jks
kafkaSource.properties.ssl.truststore.password=hyperdrive
kafkaSource.properties.ssl.keystore.location=/opt/hyperdrive/hyperdrive-uat-keystore.jks
kafkaSource.properties.ssl.keystore.password=hyperdrive
kafkaSource.properties.ssl.key.password=hyperdrive
kafkaSource.properties.sasl.kerberos.service.name=kafka
kafkaSource.properties.sasl.mechanism=GSSAPI
kafkaSource.properties.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required doNotPrompt=false useKeyTab=true storeKey=true useTicketCache=false keyTab=\"/opt/hyperdrive/svc-dehdlza-hyperd.keytab\" serviceName=\"kafka\" principal=\"svc-dehdlza-hypert@CORP.DSARENA.COM\";
#kafkaSource.properties.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required doNotPrompt=false useKeyTab=true storeKey=true useTicketCache=false keyTab="/hyperdriveVolume/svc-dehdlza-hypert.keytab" serviceName="kafka" principal="svc-dehdlza-hypert@CORP.DSARENA.COM";
#kafkaSource.properties.client.dns.lookup=resolve_canonical_bootstrap_servers_only

#Spark yarn sink properties. Properties used to deploy and run Spark job in Yarn.
sparkYarnSink.hadoopResourceManagerUrlBase=http://ip-20-0-11-79.eu-west-1.compute.internal:8088/
sparkYarnSink.hadoopConfDir=
sparkYarnSink.sparkHome=
sparkYarnSink.master=yarn
sparkYarnSink.submitTimeout=160000
sparkYarnSink.filesToDeploy=
sparkYarnSink.additionalConfs.spark.ui.port=
sparkYarnSink.additionalConfs.spark.executor.extraJavaOptions=
sparkYarnSink.additionalConfs.spark.driver.extraJavaOptions=
sparkYarnSink.additionalConfs.spark.driver.memory=2g
sparkYarnSink.additionalConfs.spark.executor.instances=2
sparkYarnSink.additionalConfs.spark.executor.cores=2
sparkYarnSink.additionalConfs.spark.executor.memory=2g
sparkYarnSink.additionalConfs.spark.yarn.keytab=
sparkYarnSink.additionalConfs.spark.yarn.principal=
sparkYarnSink.additionalConfs.spark.shuffle.service.enabled=true
sparkYarnSink.additionalConfs.spark.dynamicAllocation.enabled=true

#Postgresql properties for connection to trigger metastore
db.driver=org.postgresql.Driver
db.url=jdbc:postgresql://
db.user=
db.password=
db.keepAliveConnection=true
db.connectionPool=HikariCP
db.numThreads=4
